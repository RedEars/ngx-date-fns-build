import { Pipe, ChangeDetectorRef, NgModule } from '@angular/core';
import { DateFnsConfigurationService, calculateLocale } from './date-fns-configuration.service';
import formatDistanceToNow from 'date-fns/formatDistanceToNow';
export class FormatDistanceToNowPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        if (typeof date === 'string') {
            date = new Date(date);
        }
        return formatDistanceToNow(date, calculateLocale(options, this.config));
    }
}
FormatDistanceToNowPipe.decorators = [
    { type: Pipe, args: [{ name: 'dfnsFormatDistanceToNow', pure: false },] }
];
FormatDistanceToNowPipe.ctorParameters = () => [
    { type: DateFnsConfigurationService },
    { type: ChangeDetectorRef }
];
export class FormatDistanceToNowPipeModule {
}
FormatDistanceToNowPipeModule.decorators = [
    { type: NgModule, args: [{
                declarations: [FormatDistanceToNowPipe],
                exports: [FormatDistanceToNowPipe]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWRpc3RhbmNlLXRvLW5vdy5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWRhdGUtZm5zL3NyYy9saWIvZm9ybWF0LWRpc3RhbmNlLXRvLW5vdy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxJQUFJLEVBRUosaUJBQWlCLEVBRWpCLFFBQVEsRUFDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0wsMkJBQTJCLEVBQzNCLGVBQWUsRUFDaEIsTUFBTSxrQ0FBa0MsQ0FBQztBQUkxQyxPQUFPLG1CQUFtQixNQUFNLDhCQUE4QixDQUFDO0FBRy9ELE1BQU0sT0FBTyx1QkFBdUI7SUFHbEMsWUFDUyxNQUFtQyxFQUNuQyxFQUFxQjtRQURyQixXQUFNLEdBQU4sTUFBTSxDQUE2QjtRQUNuQyxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUU1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUM1RCxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUN2QixDQUFDO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxTQUFTLENBQ1AsSUFBc0IsRUFDdEIsT0FJQztRQUVELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1lBQzVCLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN2QjtRQUNELE9BQU8sbUJBQW1CLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDMUUsQ0FBQzs7O1lBN0JGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSx5QkFBeUIsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFOzs7WUFScEQsMkJBQTJCO1lBTDNCLGlCQUFpQjs7QUFpRG5CLE1BQU0sT0FBTyw2QkFBNkI7OztZQUp6QyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsdUJBQXVCLENBQUM7Z0JBQ3ZDLE9BQU8sRUFBRSxDQUFDLHVCQUF1QixDQUFDO2FBQ25DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUGlwZSxcbiAgUGlwZVRyYW5zZm9ybSxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIE9uRGVzdHJveSxcbiAgTmdNb2R1bGVcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2UsXG4gIGNhbGN1bGF0ZUxvY2FsZVxufSBmcm9tICcuL2RhdGUtZm5zLWNvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IExvY2FsZSB9IGZyb20gJ2RhdGUtZm5zJztcbmltcG9ydCBmb3JtYXREaXN0YW5jZVRvTm93IGZyb20gJ2RhdGUtZm5zL2Zvcm1hdERpc3RhbmNlVG9Ob3cnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zRm9ybWF0RGlzdGFuY2VUb05vdycsIHB1cmU6IGZhbHNlIH0pXG5leHBvcnQgY2xhc3MgRm9ybWF0RGlzdGFuY2VUb05vd1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtLCBPbkRlc3Ryb3kge1xuICBwcml2YXRlIGxvY2FsZUNoYW5nZWQkOiBTdWJzY3JpcHRpb247XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGNvbmZpZzogRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlLFxuICAgIHB1YmxpYyBjZDogQ2hhbmdlRGV0ZWN0b3JSZWZcbiAgKSB7XG4gICAgdGhpcy5sb2NhbGVDaGFuZ2VkJCA9IHRoaXMuY29uZmlnLmxvY2FsZUNoYW5nZWQuc3Vic2NyaWJlKF8gPT5cbiAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKClcbiAgICApO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5sb2NhbGVDaGFuZ2VkJC51bnN1YnNjcmliZSgpO1xuICB9XG5cbiAgdHJhbnNmb3JtKFxuICAgIGRhdGU6IERhdGVGbnNJbnB1dERhdGUsXG4gICAgb3B0aW9ucz86IHtcbiAgICAgIGluY2x1ZGVTZWNvbmRzPzogYm9vbGVhbjtcbiAgICAgIGFkZFN1ZmZpeD86IGJvb2xlYW47XG4gICAgICBsb2NhbGU/OiBMb2NhbGU7XG4gICAgfVxuICApOiBzdHJpbmcge1xuICAgIGlmICh0eXBlb2YgZGF0ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdERpc3RhbmNlVG9Ob3coZGF0ZSwgY2FsY3VsYXRlTG9jYWxlKG9wdGlvbnMsIHRoaXMuY29uZmlnKSk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWF0RGlzdGFuY2VUb05vd1BpcGVdLFxuICBleHBvcnRzOiBbRm9ybWF0RGlzdGFuY2VUb05vd1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1hdERpc3RhbmNlVG9Ob3dQaXBlTW9kdWxlIHt9XG4iXX0=