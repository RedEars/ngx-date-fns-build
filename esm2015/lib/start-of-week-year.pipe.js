import { Pipe, ChangeDetectorRef, NgModule } from '@angular/core';
import startOfWeekYear from 'date-fns/startOfWeekYear';
import { DateFnsConfigurationService, calculateLocale } from './date-fns-configuration.service';
export class StartOfWeekYearPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        if (typeof date === 'string') {
            date = new Date(date);
        }
        return startOfWeekYear(date, calculateLocale(options, this.config));
    }
}
StartOfWeekYearPipe.decorators = [
    { type: Pipe, args: [{ name: 'dfnsStartOfWeekYear', pure: false },] }
];
StartOfWeekYearPipe.ctorParameters = () => [
    { type: DateFnsConfigurationService },
    { type: ChangeDetectorRef }
];
export class StartOfWeekYearPipeModule {
}
StartOfWeekYearPipeModule.decorators = [
    { type: NgModule, args: [{
                declarations: [StartOfWeekYearPipe],
                exports: [StartOfWeekYearPipe]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtb2Ytd2Vlay15ZWFyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZGF0ZS1mbnMvc3JjL2xpYi9zdGFydC1vZi13ZWVrLXllYXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsSUFBSSxFQUdKLGlCQUFpQixFQUNqQixRQUFRLEVBQ1QsTUFBTSxlQUFlLENBQUM7QUFPdkIsT0FBTyxlQUFlLE1BQU0sMEJBQTBCLENBQUM7QUFFdkQsT0FBTyxFQUNMLDJCQUEyQixFQUMzQixlQUFlLEVBQ2hCLE1BQU0sa0NBQWtDLENBQUM7QUFHMUMsTUFBTSxPQUFPLG1CQUFtQjtJQUc5QixZQUNTLE1BQW1DLEVBQ25DLEVBQXFCO1FBRHJCLFdBQU0sR0FBTixNQUFNLENBQTZCO1FBQ25DLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBRTVCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQzVELElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQ3ZCLENBQUM7SUFDSixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDcEMsQ0FBQztJQUVELFNBQVMsQ0FDUCxJQUFzQixFQUN0QixPQUlDO1FBRUQsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDNUIsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0QsT0FBTyxlQUFlLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDdEUsQ0FBQzs7O1lBN0JGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxxQkFBcUIsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFOzs7WUFKaEQsMkJBQTJCO1lBWjNCLGlCQUFpQjs7QUFvRG5CLE1BQU0sT0FBTyx5QkFBeUI7OztZQUpyQyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUM7Z0JBQ25DLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO2FBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUGlwZSxcbiAgUGlwZVRyYW5zZm9ybSxcbiAgT25EZXN0cm95LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgTmdNb2R1bGVcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBEYXRlRm5zSW5wdXREYXRlLFxuICBEYXRlRm5zV2Vla0luZGV4LFxuICBEYXRlRm5zRmlyc3RXZWVrRGF5c1xufSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IExvY2FsZSB9IGZyb20gJ2RhdGUtZm5zJztcbmltcG9ydCBzdGFydE9mV2Vla1llYXIgZnJvbSAnZGF0ZS1mbnMvc3RhcnRPZldlZWtZZWFyJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlLFxuICBjYWxjdWxhdGVMb2NhbGVcbn0gZnJvbSAnLi9kYXRlLWZucy1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zU3RhcnRPZldlZWtZZWFyJywgcHVyZTogZmFsc2UgfSlcbmV4cG9ydCBjbGFzcyBTdGFydE9mV2Vla1llYXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBsb2NhbGVDaGFuZ2VkJDogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjb25maWc6IERhdGVGbnNDb25maWd1cmF0aW9uU2VydmljZSxcbiAgICBwdWJsaWMgY2Q6IENoYW5nZURldGVjdG9yUmVmXG4gICkge1xuICAgIHRoaXMubG9jYWxlQ2hhbmdlZCQgPSB0aGlzLmNvbmZpZy5sb2NhbGVDaGFuZ2VkLnN1YnNjcmliZShfID0+XG4gICAgICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpXG4gICAgKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMubG9jYWxlQ2hhbmdlZCQudW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIHRyYW5zZm9ybShcbiAgICBkYXRlOiBEYXRlRm5zSW5wdXREYXRlLFxuICAgIG9wdGlvbnM/OiB7XG4gICAgICBsb2NhbGU/OiBMb2NhbGU7XG4gICAgICB3ZWVrU3RhcnRzT24/OiBEYXRlRm5zV2Vla0luZGV4O1xuICAgICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlPzogRGF0ZUZuc0ZpcnN0V2Vla0RheXM7XG4gICAgfVxuICApOiBEYXRlIHtcbiAgICBpZiAodHlwZW9mIGRhdGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gICAgfVxuICAgIHJldHVybiBzdGFydE9mV2Vla1llYXIoZGF0ZSwgY2FsY3VsYXRlTG9jYWxlKG9wdGlvbnMsIHRoaXMuY29uZmlnKSk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbU3RhcnRPZldlZWtZZWFyUGlwZV0sXG4gIGV4cG9ydHM6IFtTdGFydE9mV2Vla1llYXJQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBTdGFydE9mV2Vla1llYXJQaXBlTW9kdWxlIHt9XG4iXX0=